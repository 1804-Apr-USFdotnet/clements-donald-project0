

CREATE DATABASE ChallengeDB
GO

USE ChallengeDB
GO

CREATE SCHEMA Business
GO
BEGIN TRANSACTION [Tran1]

BEGIN TRY


		CREATE TABLE Business.Customers 
		(
			CustomerID int IDENTITY(1,1),
			FirstName nvarchar(250) not null,
			LastName nvarchar(250) not null,
			CardNumber int not null,

		 CONSTRAINT PK_CustomerID PRIMARY KEY (CustomerID),
		)

		CREATE TABLE Business.Products 
		(
			ProductID int IDENTITY(1,1),
			[Name] nvarchar(250) not null,
			Price decimal(19,2) not null,

		 CONSTRAINT PK_ProductID PRIMARY KEY (ProductID),
		);

		CREATE TABLE Business.Orders 
		(
			OrdersID int IDENTITY(1,1),
			ProductID int not null,
			CustomerID  int not null

		 CONSTRAINT PK_OrderID PRIMARY KEY (OrdersID),
		 CONSTRAINT FK_ProductID_ProductID FOREIGN KEY (ProductID) REFERENCES Business.Products(ProductID),
		 CONSTRAINT FK_CustomerID_CustomerID FOREIGN KEY (CustomerID) REFERENCES Business.Customers(CustomerID),
		);
COMMIT TRANSACTION [Tran1]

END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION [Tran1]
END CATCH  

---add at least 3 records into each table.
INSERT INTO Business.Customers 
	([FirstName],[LastName],[CardNumber])
VALUES
	('John','Smith',123412341234);

INSERT INTO Business.Customers 
	([FirstName],[LastName],[CardNumber])
VALUES
	('Jane','Smith',123412341235);

INSERT INTO Business.Customers 
	([FirstName],[LastName],[CardNumber])
VALUES
	('John','Doe',123412341236);


---add product iPhone priced at $200.
---add customer Tina Smith.
---create order for Tina Smith bought an iPhone.-report all orders by Tina Smith.
---report all revenue generated by sales of iPhone.
---increase the price of iPhone to $250
